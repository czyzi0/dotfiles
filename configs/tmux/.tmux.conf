# Use default terminal colors
set -g default-terminal "screen-256color"

# Remap prefix from <C-b> to <C-a>
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Remap staring new window; TODO: Remap t again under sth else
# Open new window with current path
unbind t
bind t new-window -c '#{pane_current_path}'

# Remap window switching; TODO: Remap , and . again under sth else
unbind n
unbind ,
unbind p
unbind .
bind , select-window -p
bind . select-window -n

# Sane split commands (open new pane with current path)
bind h split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
unbind '"'
unbind %

# Easy pane switching
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Enable mouse control
set -g mouse on



# Status bar
set -g status-position bottom
set -g status-justify left

set -g status-style 'fg=colour254,bg=colour236'
set -g window-status-current-style 'fg=colour235,bg=colour117,bold'
set -g window-status-style 'fg=colour254,dim'
set -g message-style 'fg=colour254,bg=colour236'

set -g status-left ' #{?client_prefix,., } | '
set -g status-right 'load: #(uptime | rev | cut -d" " -f3 | rev | head -c-2 | sed s/,/./g) | disk:#(df --output=pcent / | tail -n 1) | %Y-%m-%d | %H:%M '
set -g window-status-format ' #I '
set -g window-status-current-format ' #I '

set -g status-right-length 50
set -g status-left-length 10

# Refresh statusbar every n seconds
set -g status-interval 5

# Panes borders
set -g pane-border-style 'fg=colour236'
set -g pane-active-border-style 'fg=colour236'

# Highlighted text
set -g mode-style 'fg=colour236,bg=colour254'
